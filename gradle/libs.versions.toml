[versions]

apache-httpclient = "5.5"
assertj = "3.27.4"
assertk = "0.28.1"
jackson = "2.19.2"
junit = "5.13.4"
kotlin = "2.2.20"
kotlin-coroutines = "1.8.1"
logback = "1.5.18"
okhttp = "5.1.0"
slf4j = "2.0.17"
spring-boot = "3.5.6"
spring-doc = "2.8.13"
wiremock = "3.13.1"

grpc-core = "1.75.0"
grpc-kotlin = "1.4.3"
protobuf = "4.32.1"

shadow = "9.2.0"

#pi4j = "3.0.3"
pi4j = "4.0.0-SNAPSHOT"

[libraries]

apache-httpclient = { module = "org.apache.httpcomponents.client5:httpclient5", version.ref = "apache-httpclient" }
assertj = { module = "org.assertj:assertj-core", version.ref = "assertj" }
assertk = { module = "com.willowtreeapps.assertk:assertk", version.ref = "assertk" }
jackson-databind = { module = "com.fasterxml.jackson.core:jackson-databind", version.ref = "jackson" }
junit-bom = { module = "org.junit:junit-bom", version.ref = "junit" }
kotlin-bom = { module = "org.jetbrains.kotlin:kotlin-bom", version.ref = "kotlin" }
kotlin-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlin-coroutines" }
kotlin-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlin-coroutines" }
kotlin-spring = { module = "org.jetbrains.kotlin.plugin.spring:org.jetbrains.kotlin.plugin.spring.gradle.plugin", version.ref = "kotlin" }
logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
okhttp-core = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
okhttp-sse = { module = "com.squareup.okhttp3:okhttp-sse", version.ref = "okhttp" }
slf4j-simple = { module = "org.slf4j:slf4j-simple", version.ref = "slf4j" }
spring-dependencies = { module = "org.springframework.boot:spring-boot-dependencies", version.ref = "spring-boot" }
spring-doc = { module = "org.springdoc:springdoc-openapi-starter-webmvc-ui", version.ref = "spring-doc" }
spring-gradle = { module = "org.springframework.boot:spring-boot-gradle-plugin", version.ref = "spring-boot" }

pi4j-core = { module = "com.pi4j:pi4j-core", version.ref = "pi4j" }
pi4j-plugin-mock = { module = "com.pi4j:pi4j-plugin-mock", version.ref = "pi4j" }
pi4j-plugin-linuxfs = { module = "com.pi4j:pi4j-plugin-linuxfs", version.ref = "pi4j" }
pi4j-plugin-gpiod = { module = "com.pi4j:pi4j-plugin-gpiod", version.ref = "pi4j" }
pi4j-plugin-ffm = { module = "com.pi4j:pi4j-plugin-ffm", version.ref = "pi4j" }
pi4j-raspberrypi = { module = "com.pi4j:pi4j-plugin-raspberrypi", version.ref = "pi4j" }
wiremock-core = { module = "org.wiremock:wiremock-standalone", version.ref = "wiremock" }
wiremock-jetty = { module = "org.wiremock:wiremock-jetty12", version.ref = "wiremock" }

grpc-protobuf = { group = "io.grpc", name = "grpc-protobuf", version.ref = "grpc-core" }
grpc-protobuf-lite = { group = "io.grpc", name = "grpc-protobuf-lite", version.ref = "grpc-core" }
grpc-netty = { group = "io.grpc", name = "grpc-netty", version.ref = "grpc-core" }
grpc-okhttp = { group = "io.grpc", name = "grpc-okhttp", version.ref = "grpc-core" }
grpc-testing = { group = "io.grpc", name = "grpc-testing", version.ref = "grpc-core" }
grpc-services = { group = "io.grpc", name = "grpc-services", version.ref = "grpc-core" }
grpc-stub = { group = "io.grpc", name = "grpc-stub", version.ref = "grpc-core" }
grpc-kotlin-stub = { group = "io.grpc", name = "grpc-kotlin-stub", version.ref = "grpc-kotlin" }
grpc-inprocess = { group = "io.grpc", name = "grpc-inprocess", version.ref = "grpc-core" }

protoc = { group = "com.google.protobuf", name = "protoc", version.ref = "protobuf" }
protobuf-java = { group = "com.google.protobuf", name = "protobuf-java", version.ref = "protobuf" }
protobuf-kotlin = { group = "com.google.protobuf", name = "protobuf-kotlin", version.ref = "protobuf" }
protobuf-kotlin-lite = { group = "com.google.protobuf", name = "protobuf-kotlin-lite", version.ref = "protobuf" }
protobuf-java-util = { group = "com.google.protobuf", name = "protobuf-java-util", version.ref = "protobuf" }
protoc-gen-grpc-java = { group = "io.grpc", name = "protoc-gen-grpc-java", version.ref = "grpc-core" }
protoc-gen-grpc-kotlin = { group = "io.grpc", name = "protoc-gen-grpc-kotlin", version.ref = "grpc-kotlin" }


[bundles]

pi4j = ["pi4j-core", "pi4j-plugin-mock", "pi4j-plugin-linuxfs", "pi4j-plugin-gpiod", "pi4j-raspberrypi"]
wiremock = ["wiremock-core", "wiremock-jetty"]

[plugins]

shadow = { id = "com.gradleup.shadow", version.ref = "shadow" }
